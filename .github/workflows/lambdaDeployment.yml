name: Build and Deploy all lambdas in Parallel (Serverless + Go)

on:
  push:
    branches: [ "main" ]
    paths:
      - "sls/golang/**"
      - "go.mod"
      - "go.sum"
  workflow_dispatch:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-matrix.outputs.services }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: set-matrix
        shell: bash
        run: |
          set -euo pipefail
      
          ALL_SERVICES=$(find sls/golang -maxdepth 1 -mindepth 1 -type d ! -name "bin" \
                            -exec test -f "{}/serverless.yml" \; -print \
                            | sed 's|^sls/golang/||')
      
          SELECTED=""
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            SELECTED="$ALL_SERVICES"
          else
            # triggered by push
            BEFORE="${{ github.event.before }}"
            AFTER="${{ github.sha }}"
      
            if ! git cat-file -e "$BEFORE^{commit}" 2>/dev/null; then
              echo "⚠️ BEFORE not found locally, fallback to AFTER^"
              if git cat-file -e "${AFTER}^"^{commit} 2>/dev/null; then
                BEFORE="$(git rev-parse "${AFTER}^")"
              else
                echo "⚠️ No parent for AFTER; fallback to full deploy."
                SELECTED="$ALL_SERVICES"
              fi
            fi
      
            if [ -z "$SELECTED" ]; then
              DIFF_PATHS=$(git diff --name-only "$BEFORE" "$AFTER" -- 'sls/golang/**' 'go.mod' 'go.sum' || true)
              CHANGED=$(echo "$DIFF_PATHS" | grep '^sls/golang/' | cut -d/ -f3 | sort -u || true)
      
              for svc in $CHANGED; do
                if echo "$ALL_SERVICES" | grep -qx "$svc"; then
                  SELECTED="$SELECTED $svc"
                fi
              done
      
              # during a go.mod/go.sum change full deployment will still be triggered
              if echo "$DIFF_PATHS" | grep -Eq '(^|/)(go\.mod|go\.sum)$'; then
                echo "ℹ️ go.mod/go.sum changed → selecting all services."
                SELECTED="$ALL_SERVICES"
              fi
            fi
          fi
      
          if [ -n "$SELECTED" ]; then
            JSON=$(printf '%s\n' $SELECTED | jq -R . | jq -sc .)
          else
            JSON="[]"
          fi
      
          echo "Selected services: $JSON"
          echo "services=$JSON" >> "$GITHUB_OUTPUT"

  deploy:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 20       
      matrix:
        service: ${{ fromJson(needs.discover.outputs.services) }}

    concurrency:
      group: deploy-${{ matrix.service }}
      cancel-in-progress: false

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-east-1
      STAGE: dev
      SLS_TELEMETRY_DISABLED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::167067248318:role/GithubActionServiceRole
          role-session-name: gh-oidc-poc-etl-api
          aws-region: ${{ env.AWS_REGION }}

      - name: Build & Deploy ${{ matrix.service }}
        working-directory: sls/golang
        run: |
          svc="${{ matrix.service }}"
          echo "🚀 Building $svc"
          mkdir -p bin
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 \
            go build -tags lambda.norpc -o bin/bootstrap "./$svc"
          (cd bin && zip -q "$svc.zip" bootstrap && rm -f bootstrap)

          echo "📦 Deploying $svc with artifact ../bin/$svc.zip"
          (cd "$svc" && npx --yes serverless@3 deploy --stage $STAGE --region $AWS_REGION)
